'use client';
"use strict";var e=require("tslib"),t=require("react"),r=require("recharts"),a=require("../common/utils.cjs"),o=require("../common/NoData.cjs"),l=require("../common/ChartLegend.cjs"),i=require("../common/ChartTooltip.cjs"),n=require("../../../lib/constants.cjs"),s=require("../../../lib/theme.cjs"),c=require("../../../lib/utils.cjs"),m=require("../../../lib/tremorTwMerge.cjs");function u(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var d=u(t);const h=d.default.forwardRef(((u,h)=>{const{data:k=[],categories:f=[],index:g,colors:w=s.themeColorRange,valueFormatter:p=c.defaultValueFormatter,startEndOnly:y=!1,showXAxis:v=!0,showYAxis:x=!0,yAxisWidth:C=56,animationDuration:b=900,showAnimation:A=!0,showTooltip:E=!0,showLegend:N=!0,showGridLines:T=!0,autoMinValue:L=!1,curveType:D="linear",minValue:j,maxValue:q,connectNulls:M=!1,allowDecimals:F=!0,noDataText:V,className:G}=u,W=e.__rest(u,["data","categories","index","colors","valueFormatter","startEndOnly","showXAxis","showYAxis","yAxisWidth","animationDuration","showAnimation","showTooltip","showLegend","showGridLines","autoMinValue","curveType","minValue","maxValue","connectNulls","allowDecimals","noDataText","className"]),[Y,B]=t.useState(60),O=a.constructCategoryColors(f,w),R=a.getYAxisDomain(L,j,q);return d.default.createElement("div",Object.assign({ref:h,className:m.tremorTwMerge("w-full h-80",G)},W),d.default.createElement(r.ResponsiveContainer,{className:"h-full w-full"},(null==k?void 0:k.length)?d.default.createElement(r.LineChart,{data:k},T?d.default.createElement(r.CartesianGrid,{className:m.tremorTwMerge("stroke-1","stroke-tremor-content-subtle","dark:stroke-dark-tremor-content-subtle"),strokeDasharray:"3 3",horizontal:!0,vertical:!1}):null,d.default.createElement(r.XAxis,{hide:!v,dataKey:g,interval:"preserveStartEnd",tick:{transform:"translate(0, 6)"},ticks:y?[k[0][g],k[k.length-1][g]]:void 0,fill:"",stroke:"",className:m.tremorTwMerge("text-tremor-label","fill-tremor-content","dark:fill-dark-tremor-content"),tickLine:!1,axisLine:!1,padding:{left:10,right:10},minTickGap:5}),d.default.createElement(r.YAxis,{width:C,hide:!x,axisLine:!1,tickLine:!1,type:"number",domain:R,tick:{transform:"translate(-3, 0)"},fill:"",stroke:"",className:m.tremorTwMerge("text-tremor-label","fill-tremor-content","dark:fill-dark-tremor-content"),tickFormatter:p,allowDecimals:F}),E?d.default.createElement(r.Tooltip,{wrapperStyle:{outline:"none"},isAnimationActive:!1,cursor:{stroke:"#d1d5db",strokeWidth:1},content:({active:e,payload:t,label:r})=>d.default.createElement(i.default,{active:e,payload:t,label:r,valueFormatter:p,categoryColors:O}),position:{y:0}}):null,N?d.default.createElement(r.Legend,{verticalAlign:"top",height:Y,content:({payload:e})=>l({payload:e},O,B)}):null,f.map((e=>{var t,a;return d.default.createElement(r.Line,{className:c.getColorClassNames(null!==(t=O.get(e))&&void 0!==t?t:n.BaseColors.Gray,s.colorPalette.text).strokeColor,activeDot:{className:m.tremorTwMerge("stroke-tremor-background dark:stroke-dark-tremor-background",c.getColorClassNames(null!==(a=O.get(e))&&void 0!==a?a:n.BaseColors.Gray,s.colorPalette.text).fillColor)},dot:{stroke:"#FBF7EE",r:4,strokeWidth:2},key:e,name:e,type:D,dataKey:e,stroke:"",strokeWidth:2,strokeLinejoin:"round",strokeLinecap:"round",isAnimationActive:A,animationDuration:b,connectNulls:M})}))):d.default.createElement(o,{noDataText:V})))}));h.displayName="LineChart",module.exports=h;
