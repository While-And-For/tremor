'use client';
import{__rest as e}from"tslib";import t,{useState as r}from"react";import{ResponsiveContainer as a,LineChart as o,CartesianGrid as n,XAxis as l,YAxis as i,Tooltip as s,Legend as m,Line as c}from"recharts";import{constructCategoryColors as d,getYAxisDomain as u}from"../common/utils.js";import p from"../common/NoData.js";import h from"../common/ChartLegend.js";import{ChartTooltipFrame as k}from"../common/ChartTooltip.js";import{BaseColors as f}from"../../../lib/constants.js";import{spacing as g}from"../../../lib/spacing.js";import{themeColorRange as w,colorPalette as x}from"../../../lib/theme.js";import{getColorClassNames as b,defaultValueFormatter as v}from"../../../lib/utils.js";import{tremorTwMerge as y}from"../../../lib/tremorTwMerge.js";const E=t.forwardRef(((E,N)=>{const{data:L=[],dot:D=!1,categories:A=[],index:j,colors:T=w,valueFormatter:C=v,startEndOnly:V=!1,showXAxis:X=!0,showYAxis:G=!0,yAxisWidth:Y=56,animationDuration:F=900,showAnimation:M=!0,showTooltip:O=!0,showLegend:W=!0,showGridLines:K=!0,autoMinValue:S=!1,curveType:z="linear",minValue:R,maxValue:q,connectNulls:B=!1,allowDecimals:H=!0,noDataText:I,className:J,activeDot:P,getLabelContent:Q=(()=>!1)}=E,U=e(E,["data","dot","categories","index","colors","valueFormatter","startEndOnly","showXAxis","showYAxis","yAxisWidth","animationDuration","showAnimation","showTooltip","showLegend","showGridLines","autoMinValue","curveType","minValue","maxValue","connectNulls","allowDecimals","noDataText","className","activeDot","getLabelContent"]),[Z,$]=r(60),_=d(A,T),ee=u(S,R,q);return t.createElement("div",Object.assign({ref:N,className:y("w-full h-80",J)},U),t.createElement(a,{className:"h-full w-full"},(null==L?void 0:L.length)?t.createElement(o,{data:L},K?t.createElement(n,{className:y("stroke-1","stroke-tremor-content-subtle","dark:stroke-dark-tremor-content-subtle"),strokeDasharray:"3 3",horizontal:!0,vertical:!1}):null,t.createElement(l,{hide:!X,dataKey:j,interval:"preserveStartEnd",tick:{transform:"translate(0, 6)"},ticks:V?[L[0][j],L[L.length-1][j]]:void 0,fill:"",stroke:"",className:y("text-tremor-label","fill-tremor-content","dark:fill-dark-tremor-content"),tickLine:!1,axisLine:!1,padding:{left:10,right:10},minTickGap:5}),t.createElement(i,{width:Y,hide:!G,axisLine:!1,tickLine:!1,type:"number",domain:ee,tick:{transform:"translate(-3, 0)"},fill:"",stroke:"",className:y("text-tremor-label","fill-tremor-content","dark:fill-dark-tremor-content"),tickFormatter:C,allowDecimals:H}),O?t.createElement(s,{wrapperStyle:{outline:"none"},isAnimationActive:!1,cursor:!1,formatter:(...e)=>{if(!Q(e[0]))return null},content:({label:e})=>!!Q(e)&&t.createElement(k,null,t.createElement("div",{className:y("border-tremor-border","dark:border-dark-tremor-border",g.twoXl.paddingX,g.sm.paddingY)},t.createElement("p",{className:y("font-medium","text-tremor-content-emphasis","dark:text-dark-tremor-content-emphasis")},e),t.createElement("div",{className:y(g.twoXl.paddingX,g.sm.paddingY,"space-y-1")},Q(e)))),position:{y:0}}):null,W?t.createElement(m,{verticalAlign:"top",height:Z,content:({payload:e})=>h({payload:e},_,$)}):null,A.map((e=>{var r,a;return t.createElement(c,{className:b(null!==(r=_.get(e))&&void 0!==r?r:f.Gray,x.text).strokeColor,dot:D,activeDot:null!=P?P:{className:y("stroke-tremor-background dark:stroke-dark-tremor-background",b(null!==(a=_.get(e))&&void 0!==a?a:f.Gray,x.text).fillColor)},key:e,name:e,type:z,dataKey:e,stroke:"",strokeWidth:2,strokeLinejoin:"round",strokeLinecap:"round",isAnimationActive:M,animationDuration:F,connectNulls:B})}))):t.createElement(p,{noDataText:I})))}));E.displayName="LineChart";export{E as default};
